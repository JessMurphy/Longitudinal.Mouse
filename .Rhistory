View(out2)
mean = c(paste0(mean(temp[[time]]), " (", sd(temp[[time]]), ")"),
paste0(mean(temp[[y]]), " (", sd(temp[[y]]), ")"))
sum(out2$count)
sum(out2$count)/2
60/437
out2$percent = (out2$count/sum(out2$count)/2)*100
View(out2)
out2$percent = (out2$count/(sum(out2$count)/2))*100
View(out2)
out2[,min:percent] = formatC(out2[,min:percent], format="f", digits=1)
out2[,-c(donor, count, variable)] = formatC(out2[,-c(donor, count, variable)], format="f", digits=1)
out2[,c(donor, count, variable)]
out2[,!c(donor, count, variable)]
out2[,c(-donor, -count, -variable)]
class(out2)
out2[,4:9] = formatC(out2[,4:9], format="f", digits=1)
out2[,4:9]
out2.2 = out2 %>% mutate(across(min:percent, ~formatC(.x, format="f", digits=1)))
View(out2.2)
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
View(out2.2)
donors = levels(data[[re]])
out2 = c()
for (i in donors){
temp = data[data[[paste(re)]] == i,]
donor = rep(i, 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2$percent = (out2$count/(sum(out2$count)/2))*100
donors = levels(data[[re]])
out2 = c()
for (i in donors){
temp = data[data[[paste(re)]] == i,]
donor = rep(i, 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
View(out2.2)
num_sum = data_long2 %>% group_by(Donor, Donor.Status) %>%
summarize(across(Time:Perc.Weight, list(min=min, median=median, max=max, mean=mean, sd=sd)), count=n()) %>%
mutate(across(Time_min:Perc.Weight_sd, ~formatC(.x, format="f", digits=1)))
data = na_if(data, "nd")
data = na_if(data, "Dead")
# remove mice with NA values
#data2 = drop_na(data, X0:X32)
# Current setup of data has all time points for a mouse in one row. But we need
# the data to be in long format, where each time point is a separate observation (row).
data_long = gather(data, time, perc_weight, X0:At.sacrifice)
# remove time point of "At.sacrifice"
data_long = data_long[!data_long$time=="At.sacrifice",]
# remove the "X" in front of the time points and treat them as numeric
data_long$time = as.numeric(sapply(data_long$time, function(x) gsub("X", "", x)))
# change donor age to a binary variable (1 for 6 months, 0 for 18 months)
data_long$Donor.Age = ifelse(as.numeric(data_long$Donor.Age..months.) <= 11 , 1, 0)
# consider only observations with an efficiency above 50 percent (stated in paper)
data_long = data_long[data_long$Transplantation.Efficiency=="> 50%",]
# create a new mouse ID number to indicate the correct nested nature of mice within donors
data_long$Mouse = paste(data_long$Donor, data_long$Mouse.ID.Number, sep=".")
# treat percent weight change as numeric
data_long$perc_weight = as.numeric(data_long$perc_weight)
# select only necessary variables
data_long = data_long %>% select(Donor, Donor.Status, Time=time, Perc.Weight=perc_weight, Donor.Age, Mouse)
# relevel donor variable by decreasing Perc.Weight
max_donors = data_long %>% group_by(Donor) %>% summarize(max=max(Perc.Weight, na.rm=T)) %>% arrange(desc(max))
data_long$Donor = factor(data_long$Donor, levels=max_donors$Donor)
# remove % weight na values (necessary for PBmodcomp) & arrange by donor
data_long2 = data_long %>% drop_na(Perc.Weight) %>% arrange(Donor)
# treat character variables as factors
data_long2$Mouse = factor(data_long2$Mouse, levels=unique(data_long2$Mouse))
data_long2$Donor.Status = as.factor(data_long2$Donor.Status)
# remove mice missing more than one time point
#data_long3 = data_long2 %>% filter(Donor != "185A.2", Mouse != "4092C.9", Mouse != "3114C.11")
num_sum = data_long2 %>% group_by(Donor, Donor.Status) %>%
summarize(across(Time:Perc.Weight, list(min=min, median=median, max=max, mean=mean, sd=sd)), count=n()) %>%
mutate(across(Time_min:Perc.Weight_sd, ~formatC(.x, format="f", digits=1)))
# change missing or "dead" entries to NA
data = na_if(data, "nd")
#setwd("C:/Repositories/Longitudinal.Mouse/")
data = read.csv("undernourished_study_science.csv", as.is=T)
# helper script with functions for plotting trend lines
source("C:/Repositories/EasyLME/Functions.R")
# change missing or "dead" entries to NA
data = na_if(data, "nd")
data = na_if(data, "Dead")
# Current setup of data has all time points for a mouse in one row. But we need
# the data to be in long format, where each time point is a separate observation (row).
data_long = gather(data, time, perc_weight, X0:At.sacrifice)
# remove time point of "At.sacrifice"
data_long = data_long[!data_long$time=="At.sacrifice",]
# remove the "X" in front of the time points and treat them as numeric
data_long$time = as.numeric(sapply(data_long$time, function(x) gsub("X", "", x)))
# change donor age to a binary variable (1 for 6 months, 0 for 18 months)
data_long$Donor.Age = ifelse(as.numeric(data_long$Donor.Age..months.) <= 11 , 1, 0)
# consider only observations with an efficiency above 50 percent (stated in paper)
data_long = data_long[data_long$Transplantation.Efficiency=="> 50%",]
# create a new mouse ID number to indicate the correct nested nature of mice within donors
data_long$Mouse = paste(data_long$Donor, data_long$Mouse.ID.Number, sep=".")
# treat percent weight change as numeric
data_long$perc_weight = as.numeric(data_long$perc_weight)
# select only necessary variables
data_long = data_long %>% select(Donor, Donor.Status, Time=time, Perc.Weight=perc_weight, Donor.Age, Mouse)
# relevel donor variable by decreasing Perc.Weight
max_donors = data_long %>% group_by(Donor) %>% summarize(max=max(Perc.Weight, na.rm=T)) %>% arrange(desc(max))
data_long$Donor = factor(data_long$Donor, levels=max_donors$Donor)
# remove % weight na values (necessary for PBmodcomp) & arrange by donor
data_long2 = data_long %>% drop_na(Perc.Weight) %>% arrange(Donor)
# treat character variables as factors
data_long2$Mouse = factor(data_long2$Mouse, levels=unique(data_long2$Mouse))
data_long2$Donor.Status = as.factor(data_long2$Donor.Status)
num_sum = data_long2 %>% group_by(Donor, Donor.Status) %>%
summarize(across(Time:Perc.Weight, list(min=min, median=median, max=max, mean=mean, sd=sd)), count=n()) %>%
mutate(across(Time_min:Perc.Weight_sd, ~formatC(.x, format="f", digits=1)))
View(data_long2)
str(data_long2)
data = read.csv("undernourished_study_science.csv", as.is=T)
# helper script with functions for plotting trend lines
source("C:/Repositories/EasyLME/Functions.R")
########## FORMAT DATA ##########
# change missing or "dead" entries to NA
data = na_if(data, "nd")
data = na_if(data, "Dead")
# remove mice with NA values
#data2 = drop_na(data, X0:X32)
# Current setup of data has all time points for a mouse in one row. But we need
# the data to be in long format, where each time point is a separate observation (row).
data_long = gather(data, time, perc_weight, X0:At.sacrifice)
# remove time point of "At.sacrifice"
data_long = data_long[!data_long$time=="At.sacrifice",]
# remove the "X" in front of the time points and treat them as numeric
data_long$time = as.numeric(sapply(data_long$time, function(x) gsub("X", "", x)))
# change donor age to a binary variable (1 for 6 months, 0 for 18 months)
data_long$Donor.Age = ifelse(as.numeric(data_long$Donor.Age..months.) <= 11 , 1, 0)
# consider only observations with an efficiency above 50 percent (stated in paper)
data_long = data_long[data_long$Transplantation.Efficiency=="> 50%",]
# create a new mouse ID number to indicate the correct nested nature of mice within donors
data_long$Mouse = paste(data_long$Donor, data_long$Mouse.ID.Number, sep=".")
# treat percent weight change as numeric
data_long$perc_weight = as.numeric(data_long$perc_weight)
# select only necessary variables
data_long = data_long %>% select(Donor, Donor.Status, Time=time, Perc.Weight=perc_weight, Donor.Age, Mouse)
# relevel donor variable by decreasing Perc.Weight
max_donors = data_long %>% group_by(Donor) %>% summarize(max=max(Perc.Weight, na.rm=T)) %>% arrange(desc(max))
data_long$Donor = factor(data_long$Donor, levels=max_donors$Donor)
# remove % weight na values (necessary for PBmodcomp) & arrange by donor
data_long2 = data_long %>% drop_na(Perc.Weight) %>% arrange(Donor)
# treat character variables as factors
data_long2$Mouse = factor(data_long2$Mouse, levels=unique(data_long2$Mouse))
data_long2$Donor.Status = as.factor(data_long2$Donor.Status)
# remove mice missing more than one time point
#data_long3 = data_long2 %>% filter(Donor != "185A.2", Mouse != "4092C.9", Mouse != "3114C.11")
num_sum = data_long2 %>% group_by(Donor, Donor.Status) %>%
summarize(across(Time:Perc.Weight, list(min=min, median=median, max=max, mean=mean, sd=sd)), count=n()) %>%
mutate(across(Time_min:Perc.Weight_sd, ~formatC(.x, format="f", digits=1)))
num_sum$percent = formatC((num_sum$count/sum(num_sum$count))*100, format="f", digits=1)
num_sum_long = num_sum %>% pivot_longer(cols=Time_min:Perc.Weight_sd, names_to=c("Variable", ".value"), names_sep="_")
num_sum_long2 = num_sum_long %>% mutate(Mean=paste0(mean, " (", sd, ")"), Median=paste0(median, " [", min, ", ", max, "]"),
Count=paste0(count, " (", percent, "%)")) %>% select(Donor, Donor.Status, Count, Variable, Mean, Median)
colnames(num_sum_long2)[5:6] = c("Mean (SD)", "Median [Min, Max]")
View(num_sum_long2)
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in donors){
temp = data[data[[paste(re)]] == i,]
donor = rep(i, 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
View(out)
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(i, 2)
group = rep(temp$group[i])
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(i, 2)
group = rep(temp$group[i])
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, group, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(i, 2)
group = rep(temp[[group]][i])
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, group, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
View(out)
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(i, 2)
group = rep(temp[[group]][i], 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, group, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(i, 2)
group = rep(temp[[group]][1], 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, group, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
View(out)
re="Donor"
data=data_long2
donors = levels(data[[re]])
out2 = c()
length(donors)
i=1
temp = data[data[[paste(re)]] == donors[i],]
View(temp)
group="Donor.Status"
temp[[group]]
donor = rep(i, 2)
donor = rep(donors[i], 2)
group = rep(temp[[group]][1], 2)
group
count = rep(nrow(temp), 2)
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
group = rep(temp[[group]][1], 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, group, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
y="Perc.Weight"
time="Time"
donors = levels(data[[re]])
out2 = c()
i=1
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
group = rep(temp[[group]][1], 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, group, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
View(out2)
group = rep(as.character(temp[[group]][1]), 2)
temp[[group]][1]
temp[[group]]
View(out2)
View(temp)
group
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
status = rep(as.character(temp[[group]][1]), 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, status, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
group="Donor.Status"
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
status = rep(as.character(temp[[group]][1]), 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, status, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
View(out2)
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
status = rep(as.character(temp[[group]][1]), 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, status, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
out2.2 = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
View(out)
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
status = rep(as.character(temp[[group]][1]), 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, status, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
num_sum = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
num_sum2 = num_sum %>% mutate(mean=paste0(mean, " (", sd, ")"), median=paste0(median, " [", min, ", ", max, "]"),
count=paste0(count, " (", percent, "%)")) %>% select(-c(min, max, sd, percent))
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
View(out)
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
status = rep(as.character(temp[[group]][1]), 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, status, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
num_sum = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
num_sum2 = num_sum %>% mutate(mean=paste0(mean, " (", sd, ")"), median=paste0(median, " [", min, ", ", max, "]"),
count=paste0(count, " (", percent, "%)")) %>% select(-c(min, max, sd, percent))
colnames(num_sum2) = c(donor, group, "Count", "Variable", "Mean (SD)", "Median [Min, Max]")
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
status = rep(as.character(temp[[group]][1]), 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, status, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
num_sum = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
num_sum2 = num_sum %>% mutate(mean=paste0(mean, " (", sd, ")"), median=paste0(median, " [", min, ", ", max, "]"),
count=paste0(count, " (", percent, "%)")) %>% select(-c(min, max, sd, percent))
colnames(num_sum2) = c(re, group, "Count", "Variable", "Mean (SD)", "Median [Min, Max]")
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
summary_table <- function(data, y, time, group, re, covariates=""){
donors = levels(data[[re]])
out2 = c()
for (i in 1:length(donors)){
temp = data[data[[paste(re)]] == donors[i],]
donor = rep(donors[i], 2)
status = rep(as.character(temp[[group]][1]), 2)
count = rep(nrow(temp), 2)
variable = c(time, y)
min = c(min(temp[[time]]), min(temp[[y]]))
median = c(median(temp[[time]]), median(temp[[y]]))
max = c(max(temp[[time]]), max(temp[[y]]))
mean = c(mean(temp[[time]]), mean(temp[[y]]))
sd = c(sd(temp[[time]]), sd(temp[[y]]))
out = data.frame(donor, status, count, variable, min, median, max, mean, sd)
out2 = rbind(out2, out)
}
num_sum = out2 %>% mutate(percent=(out2$count/(sum(out2$count)/2))*100, across(min:percent, ~formatC(.x, format="f", digits=1)))
num_sum2 = num_sum %>% mutate(mean=paste0(mean, " (", sd, ")"), median=paste0(median, " [", min, ", ", max, "]"),
count=paste0(count, " (", percent, "%)")) %>% select(-c(min, max, sd, percent))
colnames(num_sum2) = c(re, group, "Count", "Variable", "Mean (SD)", "Median [Min, Max]")
return(num_sum2)
}
out = summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse")
View(out)
View(out)
out %>% knitr::kable(format="html") %>% kable_styling(full_width=F)
library(kableExtra)
out %>% knitr::kable(format="html") %>% kable_styling(full_width=F)
# create a summary table
summary_table(data_long2, "Perc.Weight", "Time", "Donor.Status", "Donor", "Mouse") %>%
knitr::kable(format="html") %>% kable_styling(full_width=F)
